EVERYTHING IS BIG-ENDIAN
remember that this will be running on 32-bit systems, so all our ints are going to be 32 bits.
If an int happens to have more than 32 bits of info in it when converting to a byte array, we'll just truncate it to 32 bits. This should never happen.

enums are all represented by unsigned ints

enum definitions:
	PacketType is defined in com.timothyaveni.apcsfinal.networking.PacketTypeID
	Direction:
		Direction.NORTH : 4
		Direction.EAST  : 3
		Direction.SOUTH : 1
		Direction.WEST  : 2

all Packets:
	byte 0: packet type		(PacketType enum)
	bytes 1-3: sender packet ID	(unsigned int)
	byte 4: client ID (max 256 clients connected)	(unsigned int)
	byte 5: must-acknowledge? boolean	(unsigned int 0-1)
	
AcknowledgePacket (total size=8 bytes):
	bytes 6-8: ID of must-acknowledge packet according to receiver

PlayerLocationPacket (total size=15 bytes):
	byte 6: world section ID	(unsigned int)
		0 corresponds to a null world, which means the client is in the process of switching worlds. The client will send another packet after the world switch..
		both of these packets will be must-acknowledge. 
	bytes 7-10: location-x	 (unsigned int)
	bytes 11-14: location-y  (unsigned int)
	byte 15: facing			 (Direction enum)

EntityDamagePacket must-acknowledge (total size=10 bytes):
	bytes 6-7: entity id
	bytes 8-10: damage amount (signed int)
