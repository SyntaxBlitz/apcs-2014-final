EVERYTHING IS BIG-ENDIAN
remember that this will be running on 32-bit systems, so all our ints are going to be 32 bits.
If an int happens to have more than 32 bits of info in it when converting to a byte array, we'll just truncate it to 32 bits. This should never happen.

enums are all represented by unsigned ints

enum definitions:
	PacketType is defined in com.timothyaveni.apcsfinal.networking.PacketTypeID
	Direction:
		Direction.NORTH : 3
		Direction.EAST  : 2
		Direction.SOUTH : 0
		Direction.WEST  : 1
	Entity:
		Tank			: 0
		SkeletonEnemy	: 1

all Packets:
	byte 0: packet type		(PacketType enum)
	bytes 1-3: sender packet ID	(unsigned int)
	byte 4: client ID (max 256 clients connected)	(unsigned int)
	byte 5: must-acknowledge? boolean	(unsigned int 0-1)
	
AcknowledgePacket (total size=9 bytes):
	bytes 6-8: ID of must-acknowledge packet according to receiver

EntityLocationPacket (total size=18 bytes):
	bytes 6-7: entity id (unsigned int)
	byte 8: world section ID	(unsigned int)
		0 corresponds to a null world, which means the client is in the process of switching worlds. The client will send another packet after the world switch..
		both of these packets will be must-acknowledge. 
	bytes 9-12: location-x	 (signed int)	// these are signed because we can't actually store 4-byte unsigned ints on a 32-bit system ;)
	bytes 13-16: location-y  (signed int)
	byte 17: facing			 (Direction enum)

EntityDamagePacket must-acknowledge (total size=11 bytes):
	bytes 6-7: entity id
	bytes 8-10: damage amount (signed int)

NewEntityPacket must-acknowledge (total size=19 bytes):
	byte 6: entity type		(Entity enum)
	bytes 7-8: entity id	(unsigned int)
	byte 9: world section ID	(unsigned int)
	bytes 10-13: location-x	(signed int)
	bytes 14-17: location-y	(signed int)
	byte 18: facing (Direction enum)
	
NewClientPacket (total size=7 bytes):	NOT must-acknowledge, because the server sends a different sort of acknowldgement.
	byte 4's value is ignored
	byte 6: player's entity type (Entity enum)

NewClientAcknowledgementPacket (total size=9 bytes):
	byte 6: assigned client ID (unsigned int)
	bytes 7-8: assigned player entity ID (unsigned int)
	
SimpleAttackPacket (total size=9 bytes):
	bytes 6-7: entity id	(unsigned int)
	byte 8: is currently attacking?	boolean (unsigned int 0-1)